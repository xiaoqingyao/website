<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bold" xml:space="preserve">
    <value>加粗</value>
    <comment>加粗</comment>
  </data>
  <data name="CancelCommend" xml:space="preserve">
    <value>取消推荐</value>
  </data>
  <data name="CancelLink" xml:space="preserve">
    <value>取消审核</value>
  </data>
  <data name="CheckLink" xml:space="preserve">
    <value>审核链接</value>
  </data>
  <data name="ClassDesc" xml:space="preserve">
    <value>分类描述</value>
    <comment>分类描述</comment>
  </data>
  <data name="ClassIsUse" xml:space="preserve">
    <value>分类名称已被使用，不能删除！</value>
  </data>
  <data name="ClassName" xml:space="preserve">
    <value>分类名称</value>
    <comment>分类名称</comment>
  </data>
  <data name="ClassNameIsExis" xml:space="preserve">
    <value>分类名称已存在！</value>
    <comment>分类名称已存在！</comment>
  </data>
  <data name="ClickNum" xml:space="preserve">
    <value>点击次数</value>
    <comment>点击次数</comment>
  </data>
  <data name="Commend" xml:space="preserve">
    <value>推荐</value>
    <comment>推荐</comment>
  </data>
  <data name="CommendLink" xml:space="preserve">
    <value>推荐链接</value>
  </data>
  <data name="DelLink" xml:space="preserve">
    <value>删除链接</value>
  </data>
  <data name="DisplayOptions" xml:space="preserve">
    <value>显示选项</value>
  </data>
  <data name="Intro" xml:space="preserve">
    <value>网站介绍</value>
    <comment>网站介绍</comment>
  </data>
  <data name="Keyword" xml:space="preserve">
    <value>关键字</value>
  </data>
  <data name="LinkClass" xml:space="preserve">
    <value>所属分类</value>
    <comment>所属分类</comment>
  </data>
  <data name="LinkColor" xml:space="preserve">
    <value>链接颜色</value>
    <comment>链接颜色</comment>
  </data>
  <data name="LinkType" xml:space="preserve">
    <value>链接类型</value>
    <comment>链接类型</comment>
  </data>
  <data name="NoCheck" xml:space="preserve">
    <value>未审</value>
  </data>
  <data name="WebNameIsExis" xml:space="preserve">
    <value>网站名称已存在！</value>
  </data>
  <data name="WebLogo" xml:space="preserve">
    <value>网站 Logo</value>
    <comment>网站 Logo</comment>
  </data>
  <data name="WebName" xml:space="preserve">
    <value>网站名称</value>
    <comment>网站名称</comment>
  </data>
  <data name="WebSiteName" xml:space="preserve">
    <value>站长姓名</value>
    <comment>站长姓名</comment>
  </data>
  <data name="WebUrl" xml:space="preserve">
    <value>网站地址</value>
    <comment>网站地址</comment>
  </data>
  <data name="YesCheck" xml:space="preserve">
    <value>已审</value>
  </data>
  <data name="DelFail" xml:space="preserve">
    <value>删除失败！</value>
  </data>
  <data name="DelSuccess" xml:space="preserve">
    <value>删除成功！</value>
  </data>
  <data name="WebUrlIsExis" xml:space="preserve">
    <value>网站地址已存在！</value>
  </data>
</root>